{
  "overall_passed": false,
  "overall_score": 0.8398109929565449,
  "gates": {
    "Code Quality": {
      "name": "Code Quality",
      "passed": false,
      "score": 0.639340769769295,
      "details": {
        "complexity": {
          "score": 0.18863636363636366,
          "average_complexity": 53.45454545454545,
          "max_complexity": 117,
          "files_analyzed": 22,
          "high_complexity_files": [
            "src/autoscaling.py",
            "src/benchmarks.py",
            "src/cli.py",
            "src/compliance.py",
            "src/core.py",
            "src/deployment.py",
            "src/i18n.py",
            "src/models.py",
            "src/optimization.py",
            "src/resilience.py",
            "src/scaling.py",
            "src/security.py",
            "src/training.py",
            "src/validation.py",
            "src/experiments/ab_testing.py",
            "src/utils/data_processing.py",
            "src/utils/logging_config.py",
            "src/utils/monitoring.py"
          ]
        },
        "docstring_coverage": {
          "score": 0.9705882352941176,
          "function_coverage": 0.9411764705882353,
          "class_coverage": 1.0,
          "total_functions": 442,
          "documented_functions": 416,
          "total_classes": 108,
          "documented_classes": 108
        },
        "code_structure": {
          "score": 0.8409090909090908,
          "directory_structure": 1.0,
          "file_sizing": 1.0,
          "import_organization": 0.5227272727272727,
          "average_file_size": 19331.363636363636,
          "total_files": 22
        },
        "imports": {
          "score": 0.5,
          "total_imports": 251,
          "external_imports": 251,
          "internal_imports": 0,
          "unused_imports": 0,
          "circular_imports": []
        },
        "naming": {
          "score": 0.9696693029182945,
          "total_violations": 83,
          "violations": [
            "Variable X_test in src/cli.py should be snake_case",
            "Variable X_test in src/cli.py should be snake_case",
            "Variable X_test in src/cli.py should be snake_case",
            "Variable PUBLIC in src/compliance.py should be snake_case",
            "Variable INTERNAL in src/compliance.py should be snake_case",
            "Variable CONFIDENTIAL in src/compliance.py should be snake_case",
            "Variable RESTRICTED in src/compliance.py should be snake_case",
            "Variable PERSONAL in src/compliance.py should be snake_case",
            "Variable INFERENCE in src/compliance.py should be snake_case",
            "Variable MONITORING in src/compliance.py should be snake_case"
          ],
          "files_analyzed": 22
        }
      },
      "recommendations": [
        "Improve code quality metrics to achieve 80% threshold"
      ],
      "timestamp": 1755262142.3094735
    },
    "Security": {
      "name": "Security",
      "passed": false,
      "score": 0.78,
      "details": {
        "security_issues": {
          "score": 0.6,
          "issues_found": 2,
          "issues": [
            {
              "file": "src/security.py",
              "issue": "Use of eval() function",
              "pattern": "eval("
            },
            {
              "file": "src/security.py",
              "issue": "Use of exec() function",
              "pattern": "exec("
            }
          ]
        },
        "secrets": {
          "score": 1.0,
          "secrets_found": 0,
          "secrets": []
        },
        "dependencies": {
          "score": 0.8,
          "vulnerabilities": [],
          "note": "Dependency security scan placeholder"
        }
      },
      "recommendations": [
        "Address security vulnerabilities before deployment",
        "Review and remove any hardcoded credentials",
        "Update dependencies with known vulnerabilities"
      ],
      "timestamp": 1755262142.3683872
    },
    "Performance": {
      "name": "Performance",
      "passed": true,
      "score": 0.9999032020568848,
      "details": {
        "import_performance": {
          "score": 1.0,
          "import_time_seconds": 0.08341193199157715,
          "status": "success"
        },
        "functionality_performance": {
          "score": 0.9998617172241211,
          "config_creation_time": 0.00013828277587890625,
          "status": "success"
        }
      },
      "recommendations": [],
      "timestamp": 1755262142.4519918
    },
    "Documentation": {
      "name": "Documentation",
      "passed": true,
      "score": 0.94,
      "details": {
        "readme": {
          "score": 1.0,
          "length": 11967,
          "sections_found": 5,
          "total_sections": 5,
          "status": "exists"
        },
        "api_docs": {
          "score": 0.8,
          "status": "assumed_good",
          "note": "Based on docstring coverage analysis"
        },
        "examples": {
          "score": 1.0,
          "python_examples": 5,
          "notebook_examples": 0,
          "total_examples": 5,
          "status": "exists"
        }
      },
      "recommendations": [],
      "timestamp": 1755262142.453193
    }
  },
  "summary": {
    "total_gates": 4,
    "passed_gates": 2,
    "timestamp": 1755262142.453225
  }
}